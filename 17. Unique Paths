
import java.util.Arrays;

public class Solution {
	static int uniquePathsHelper(int m, int n, int[][] dp) {
		// Base condition
		if (m == 1 || n == 1) { 
			return 1;
		}

		if (dp[m][n] != -1) { 
			return dp[m][n];
		}
		
		int temp = uniquePathsHelper(m - 1, n, dp) + uniquePathsHelper(m, n - 1, dp); 
		dp[m][n] = temp;
		return temp;
	}

	public static int uniquePaths(int m, int n) {
		int[][] dp = new int[m + 1][n + 1]; 
		for (int[] row : dp) {
			Arrays.fill(row, -1);
		}

		return uniquePathsHelper(m, n, dp); 
	}
}
